name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Cache npm dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Run tests
      run: npm run test:coverage

    - name: Build
      run: npm run build

    - name: Export
      run: npm run export

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: .next/

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to Docker
      run: |
        docker build -t docker.sxc.codes/buildai:latest .
        echo "${{ secrets.DOCKER_REGISTRY_TOKEN }}" | docker login docker.sxc.codes -u "${{ secrets.DOCKER_REGISTRY_USER }}" --password-stdin
        docker push docker.sxc.codes/buildai:latest
    - name: Notify with Curl
      run: |
        curl -X POST "https://grafana.sxc.codes/api/alerts" \
          -H "Authorization: Bearer ${{ secrets.GRAFANA_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{
            "name": "BuildAI Deployment Alert",
            "message": "BuildAI has been deployed",
            "tags": ["deployment", "buildai"],
            "recipients": ["tiatheone@protonmail.com", "garrett@sxc.codes", "garrett.dillman@gmail.com"]
          }'

