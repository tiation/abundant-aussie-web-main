version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: rigger_db
      POSTGRES_USER: rigger_user
      POSTGRES_PASSWORD: rigger_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rigger_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - rigger_network

  # API Gateway
  api_gateway:
    build: ../../BackendServices/APIGateway
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: postgresql://rigger_user:rigger_password@postgres:5432/rigger_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - rigger_network

  # Authentication Service
  auth_service:
    build: ../../BackendServices/AuthenticationService
    ports:
      - "8081:8081"
    environment:
      DATABASE_URL: postgresql://rigger_user:rigger_password@postgres:5432/rigger_db
      JWT_SECRET: your_jwt_secret_here
    depends_on:
      - postgres
    networks:
      - rigger_network

  # Database Service
  database_service:
    build: ../../BackendServices/DatabaseService
    ports:
      - "8082:8082"
    environment:
      DATABASE_URL: postgresql://rigger_user:rigger_password@postgres:5432/rigger_db
    depends_on:
      - postgres
    networks:
      - rigger_network

  # Notification Service
  notification_service:
    build: ../../BackendServices/NotificationService
    ports:
      - "8083:8083"
    environment:
      REDIS_URL: redis://redis:6379
    depends_on:
      - redis
    networks:
      - rigger_network

  # Web Applications
  rigger_portal:
    build: ../../WebApplications/RiggerPortal
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://api_gateway:8080
    depends_on:
      - api_gateway
    networks:
      - rigger_network

  rigger_dashboard:
    build: ../../WebApplications/RiggerDashboard
    ports:
      - "3001:3001"
    environment:
      VUE_APP_API_URL: http://api_gateway:8080
    depends_on:
      - api_gateway
    networks:
      - rigger_network

  # Automation Server
  automation_server:
    build: ../../AutomationServer
    ports:
      - "8084:8084"
    environment:
      DATABASE_URL: postgresql://rigger_user:rigger_password@postgres:5432/rigger_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - rigger_network

  # Metrics Dashboard
  metrics_dashboard:
    build: ../../MetricsDashboard
    ports:
      - "3002:3002"
    environment:
      API_URL: http://api_gateway:8080
    depends_on:
      - api_gateway
    networks:
      - rigger_network

  # Mobile Development Tools
  react_native_metro:
    build: ../../MobileApps/RiggerConnectMobileApp
    ports:
      - "8081:8081"  # Metro bundler
    volumes:
      - ../../MobileApps/RiggerConnectMobileApp:/app
    command: npm start
    networks:
      - rigger_network

  # Mobile Backend for Development
  mobile_api_proxy:
    image: nginx:alpine
    ports:
      - "8090:80"
    volumes:
      - ./nginx/mobile-proxy.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api_gateway
    networks:
      - rigger_network

  # Development Database Admin
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@riggerapps.com
      PGADMIN_DEFAULT_PASSWORD: admin_password
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - rigger_network

volumes:
  postgres_data:

networks:
  rigger_network:
    driver: bridge
