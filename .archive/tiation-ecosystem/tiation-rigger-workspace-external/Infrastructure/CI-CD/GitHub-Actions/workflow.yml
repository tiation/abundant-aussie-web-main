name: Rigger Workspace CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd MobileApps/RiggerConnectMobileApp && npm ci
    
    - name: Run tests
      run: |
        npm test
        cd MobileApps/RiggerConnectMobileApp && npm test
    
    - name: Build React Native
      run: |
        cd MobileApps/RiggerConnectMobileApp
        npx react-native bundle --platform ios --entry-file index.js --bundle-output ios/main.jsbundle
        npx react-native bundle --platform android --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle

  ios-build:
    runs-on: macos-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Build iOS App (RiggerJobs)
      run: |
        cd MobileApps/RiggerJobsMobileApp
        xcodebuild -project RiggerJobs.xcodeproj -scheme RiggerJobs -configuration Release -sdk iphoneos archive
    
    - name: Build React Native iOS
      run: |
        cd MobileApps/RiggerConnectMobileApp
        npx pod-install ios
        cd ios
        xcodebuild -workspace RiggerConnect.xcworkspace -scheme RiggerConnect -configuration Release -sdk iphoneos archive

  android-build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
    
    - name: Build Android App
      run: |
        cd MobileApps/RiggerConnectMobileApp/android
        ./gradlew assembleRelease

  deploy:
    runs-on: ubuntu-latest
    needs: [ios-build, android-build]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Production
      run: |
        echo "Deploying to production environment"
        # Add deployment scripts here
    
    - name: Deploy to App Stores
      run: |
        echo "Deploying mobile apps to app stores"
        # Add app store deployment scripts here
