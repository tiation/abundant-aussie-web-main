# Prometheus configuration for RiggerHub ecosystem monitoring
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'rigger-production'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets:
        - 'docker.sxc.codes:9100'
        - 'helm.sxc.codes:9100'
        - 'grafana.sxc.codes:9100'
        - 'supabase.sxc.codes:9100'
        - 'elastic.sxc.codes:9100'
        - 'gitlab.sxc.codes:9100'
        - 'ubuntu.sxc.codes:9100'

  # Kubernetes cluster monitoring
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
    - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      action: keep
      regex: default;kubernetes;https

  # Kubernetes nodes
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
    - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes pods
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
    - role: pod
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name

  # RiggerHub applications
  - job_name: 'rigger-backend'
    static_configs:
      - targets: ['rigger-backend:3000']
    metrics_path: /metrics
    scrape_interval: 10s

  - job_name: 'rigger-connect-web'
    static_configs:
      - targets: ['rigger-connect-web:3000']
    metrics_path: /api/metrics
    scrape_interval: 10s

  - job_name: 'rigger-hub-web'
    static_configs:
      - targets: ['rigger-hub-web:3000']
    metrics_path: /api/metrics
    scrape_interval: 10s

  # Database monitoring
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s

  # Nginx monitoring
  - job_name: 'nginx-exporter'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s

  # Docker daemon monitoring
  - job_name: 'docker-daemon'
    static_configs:
      - targets: ['docker.sxc.codes:9323']
    scrape_interval: 30s

  # Elasticsearch monitoring
  - job_name: 'elasticsearch-exporter'
    static_configs:
      - targets: ['elasticsearch-exporter:9114']
    scrape_interval: 30s

  # Grafana monitoring
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana.sxc.codes:3000']
    metrics_path: /metrics
    scrape_interval: 30s

  # GitLab monitoring
  - job_name: 'gitlab'
    static_configs:
      - targets: ['gitlab.sxc.codes:9168']
    scrape_interval: 30s

  # Supabase monitoring
  - job_name: 'supabase'
    static_configs:
      - targets: ['supabase.sxc.codes:8080']
    metrics_path: /metrics
    scrape_interval: 30s

  # Blackbox exporter for endpoint monitoring
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://api.sxc.codes/health
        - https://riggerconnect.sxc.codes
        - https://riggerhub.sxc.codes
        - https://grafana.sxc.codes
        - https://gitlab.sxc.codes
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # SSL certificate monitoring
  - job_name: 'blackbox-ssl'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
        - api.sxc.codes:443
        - riggerconnect.sxc.codes:443
        - riggerhub.sxc.codes:443
        - grafana.sxc.codes:443
        - gitlab.sxc.codes:443
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

# Remote write configuration for long-term storage
remote_write:
  - url: "https://prometheus-remote-write.example.com/api/v1/write"
    basic_auth:
      username: prometheus
      password_file: /etc/prometheus/remote_write_password
